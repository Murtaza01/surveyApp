{
  /* <form
            onSubmit={(e) => {
              e.preventDefault();
              const newScore = parseInt(e.target[userChoice].value);
              setUserScore((prevScore) => prevScore + newScore);
              console.log(userScore);
              setUserChoice(null);
              e.target.reset();
            }}
            className="flex gap-10"
          >
            {choices.map((choice, index) => {
              return (
                <label htmlFor={choice} className="text-xl" key={choice}>
                  Pick {choice}
                  <input
                    type="radio"
                    name="choice"
                    onClick={() => setUserChoice(index)}
                    value={index}
                    id={choice}
                  />
                </label>
              );
            })}
            <button
              disabled={userChoice === null}
              onClick={() => {
                showSurvey
                  ? setQuestionIndex((prev) => prev + 1)
                  : setShowElement("Result");
              }}
            >
              {showSurvey ? "Next Button" : "Show Result"}
            </button>
          </form> */
}

{showElement === "Survey" && (
        <Survey questions={questions} questionIndex={questionIndex}>
          <Form handleForm={handleForm}>
            {choices.map((choice, index) => {
              return (
                <FormLabel
                  key={choice}
                  choice={choice}
                  index={index}
                  setUserChoice={setUserChoice}
                />
              );
            })}
            <FormButton
              userChoice={userChoice}
              setQuestionIndex={setQuestionIndex}
              setShowElement={setShowElement}
              showSurvey={showSurvey}
            />
          </Form>
        </Survey>
      )}



     // const [surveyResult, setSurveyResult] = useState();

  // useEffect(() => {
  //   async function fetchingResult() {
  //     try {
  //       const result = await fetchResult(userResult);
  //       setSurveyResult(result);
  //     } catch (error) {
  //       console.error(error);
  //     }
  //   }
  //   fetchingResult();
  // }, []);

  // const [surveyData, setSurveyData] = useState();

  // useEffect(() => {
  //   async function fetchingQuestions() {
  //     try {
  //       const questions = await fetchQuestion();
  //       setSurveyData(questions);
  //     } catch (error) {
  //       console.log("hello world");
  //     }
  //   }
  //   fetchingQuestions();
  // }, []);

  // app.get("/results", (req, res) => {
//   const results = readFileSync(resultsFile);
//   const parsedResults = JSON.parse(results);
//   res.status(200).send(parsedResults);
// });